/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Fd as PrismaFd } from "@prisma/client";

export class FdServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FdCountArgs, "select">): Promise<number> {
    return this.prisma.fd.count(args);
  }

  async fds(args: Prisma.FdFindManyArgs): Promise<PrismaFd[]> {
    return this.prisma.fd.findMany(args);
  }
  async fd(args: Prisma.FdFindUniqueArgs): Promise<PrismaFd | null> {
    return this.prisma.fd.findUnique(args);
  }
  async createFd(args: Prisma.FdCreateArgs): Promise<PrismaFd> {
    return this.prisma.fd.create(args);
  }
  async updateFd(args: Prisma.FdUpdateArgs): Promise<PrismaFd> {
    return this.prisma.fd.update(args);
  }
  async deleteFd(args: Prisma.FdDeleteArgs): Promise<PrismaFd> {
    return this.prisma.fd.delete(args);
  }
}
